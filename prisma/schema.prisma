// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = "postgresql://postgres:12345@localhost:5432/bcare?schema=public" 
}

// INFORMATION SHOP

model infshop{
  id Int @id @default(autoincrement())
  name String?
  email String?
  phone String?
  address String?
  describe String?
  timework String?
  img String?
}

model soicial{
  id Int @id @default(autoincrement())
  name String?
  link String?
  img String?
}

model service{
  id Int @id @default(autoincrement())
  name String?
  img String?
  content String?
}

model marketing_shop{
  id Int @id @default(autoincrement())
  name String?
  link String?
  describe String?
  img String?
  active Int
}

model marketing{
  id Int @id @default(autoincrement())
  name String?
  describe String?
  img String?
  active Int
  product marketing_product[]
}

model marketing_product{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productid], references: [id])
  productid Int
  marketing marketing @relation(fields: [marketingid], references: [id])
  marketingid Int
}

//  INFORMATION PRODUCT

model product{
  id Int @id @default(autoincrement())
  name String?
  price String?
  img String[]
  describe String?
  content String?
  category category @relation(fields: [categoryid], references: [id])
  categoryid Int
  sale Int
  view Int
  productlike productlike[]
  marketing marketing_product[]
  coupon coupon_product[]
  order order_product[]
  review review[]
  classfy classfy[]
  cart user_product[]
}

model category{
  id Int @id @default(autoincrement())
  name String?
  coupon category_coupon[]
  product product[]
}

model classfy{
  id Int @id @default(autoincrement())
  name String?
  quantity String?
  img String?
  product product @relation(fields: [productid], references: [id])
  productid Int
  order order_product[]
  cart user_product[]
}

model review{
  id Int @id @default(autoincrement())
  content String?
  product product @relation(fields: [productid], references: [id])
  productid Int
  user user @relation(fields: [userid], references: [id])
  userid Int
  time String?
}

model order_product{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productid], references: [id])
  productid Int
  quantity Int
  classfy classfy @relation(fields: [classfyid], references: [id])
  classfyid Int
  order order @relation(fields: [orderid], references: [id])
  orderid Int

}

model coupon_product{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productid], references: [id])
  productid Int
  coupon coupon @relation(fields: [couponid], references: [id])
  couponid Int
}

model productlike{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productid], references: [id])
  productid Int
  user user @relation(fields: [userid], references: [id])
  userid Int
}

model user_product{
  id Int @id @default(autoincrement())
  product product @relation(fields: [productid], references: [id])
  productid Int
  user user @relation(fields: [userid], references: [id])
  userid Int
  classfy classfy @relation(fields: [classfyid], references: [id])
  classfyid Int
}

// INFORMATION USER

model user{
  id Int @id @default(autoincrement())
  name String?
  img String?
  email String?
  phone String?
  address String?
  pass String?
  role role_user[] 
  blog blog[]
  comment comment[]
  review review[]
  product user_product[]
  order order[]
  typer typer_user[]
  coupon user_coupon[]
  productlike productlike[]
  addressoder address_order[]
}

model role_user{
  id Int @id @default(autoincrement())
  role role @relation(fields: [roleid], references: [id])
  roleid Int
  user user @relation(fields: [userid], references: [id])
  userid Int
}

model role{
  id Int @id @default(autoincrement())
  position String?
  user role_user[]
}

model blog{
  id Int @id @default(autoincrement())
  name String?
  describe String?
  img String?
  content String?
  time String?
  user user @relation(fields: [userid], references: [id])
  userid Int
  comment comment[]
  tag tag_blog[]
}

model comment{
  id Int @id @default(autoincrement())
  content String?
  time String?
  user user @relation(fields: [userid], references: [id])
  userid Int
  blog blog @relation(fields: [blogid], references: [id])
  blogid Int
}

model order{
  id Int @id @default(autoincrement())
  user user @relation(fields: [userid], references: [id])
  userid Int
  address String?
  time String?
  active Int
  product order_product[]
  coupon order_coupon[]
}

model typer_user{
  id Int @id @default(autoincrement())
  user user @relation(fields: [userid], references: [id])
  userid Int
  typer typer @relation(fields: [typerid], references: [id])
  typerid Int
}

model user_coupon{
  id Int @id @default(autoincrement())
  user user @relation(fields: [userid], references: [id])
  userid Int
  coupon coupon @relation(fields: [couponid], references: [id])
  couponid Int
}

model address_order{
  id Int @id @default(autoincrement())
  name String?
  active Int
  user user @relation(fields: [userid], references: [id])
  userid Int
}

// OTHER MODEL 

model tag{
  id Int @id @default(autoincrement())
  name String?
  blog tag_blog[]
}

model tag_blog{
  id Int @id @default(autoincrement())
  blog blog @relation(fields: [blogid], references: [id])
  blogid Int
  tag tag @relation(fields: [tagid], references: [id])
  tagid Int
}

model category_coupon{
  id Int @id @default(autoincrement())
  category category @relation(fields: [categoryid], references: [id])
  categoryid Int
  coupon coupon @relation(fields: [couponid], references: [id])
  couponid Int
}

model typer{
  id Int @id @default(autoincrement())
  name String?
  coupon typer_coupon[]
  user typer_user[]
}

model contact{
  id Int @id @default(autoincrement())
  subject String?
  name String?
  message String?
  email String?
  phone String?
}

model coupon{
  id Int @id @default(autoincrement())
  name String?
  discountpercent String?
  discountprice String?
  quantity Int
  active Int
  buymin String
  category category_coupon[]
  order order_coupon[]
  typer typer_coupon[]
  product coupon_product[]
  user user_coupon[]
}

model order_coupon{
  id Int @id @default(autoincrement())
  coupon coupon @relation(fields: [couponid], references: [id])
  couponid Int
  order order @relation(fields: [orderid], references: [id])
  orderid Int
}

model typer_coupon{
  id Int @id @default(autoincrement())
  coupon coupon @relation(fields: [couponid], references: [id])
  couponid Int
  typer typer @relation(fields: [typerid], references: [id])
  typerid Int
}